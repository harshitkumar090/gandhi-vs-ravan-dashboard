# -*- coding: utf-8 -*-
"""Gandhi Vs Ravan.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Ffhe12LIsRDMIPnybmewTeyoL2fTpv39
"""

import plotly.graph_objects as go
from plotly.subplots import make_subplots
import pandas as pd
import numpy as np

# Funny comparison data
categories = ['Heads Count', 'Peaceful Vibes', 'Fashion Sense', 'Transportation',
              'Diet Preference', 'Anger Management', 'Fan Following', 'Movie Appearances']

gandhi_scores = [1, 100, 30, 20, 90, 40, 50, 45]
ravan_scores = [10, 15, 95, 100, 60, 85, 95, 90]

# Create subplots
fig = make_subplots(
    rows=2, cols=2,
    subplot_titles=('🕊️ Gandhi vs 👿 Ravana: The Ultimate Showdown',
                    '📊 Power Stats Comparison',
                    '🎭 Historical Impact Timeline',
                    '🏆 Who Wins Categories?'),
    specs=[[{'type': 'bar'}, {'type': 'scatter'}],
           [{'type': 'scatter'}, {'type': 'bar'}]],
    vertical_spacing=0.15,
    horizontal_spacing=0.12
)

# 1. Radar-style bar chart (flipped)
fig.add_trace(
    go.Bar(name='Gandhi 🕊️', x=gandhi_scores, y=categories,
           orientation='h', marker=dict(color='#FF9933', line=dict(color='#138808', width=2)),
           text=gandhi_scores, textposition='outside'),
    row=1, col=1
)
fig.add_trace(
    go.Bar(name='Ravana 👿', x=ravan_scores, y=categories,
           orientation='h', marker=dict(color='#8B0000', line=dict(color='#FFD700', width=2)),
           text=ravan_scores, textposition='outside'),
    row=1, col=1
)

# 2. Scatter plot - Battle of Traits
traits = {
    'Wisdom': (95, 85),
    'Strength': (60, 95),
    'Humility': (100, 10),
    'Knowledge': (80, 98),
    'Pride': (5, 100),
    'Compassion': (100, 20)
}

for trait, (g_val, r_val) in traits.items():
    fig.add_trace(
        go.Scatter(x=[g_val], y=[r_val], mode='markers+text',
                   marker=dict(size=20, symbol='star'),
                   text=[trait], textposition='top center',
                   name=trait, showlegend=False),
        row=1, col=2
    )

# Add diagonal line
fig.add_trace(
    go.Scatter(x=[0, 100], y=[0, 100], mode='lines',
               line=dict(dash='dash', color='gray'),
               name='Balance Line', showlegend=False),
    row=1, col=2
)

# 3. Timeline of celebrations
years = np.arange(1947, 2026, 10)
gandhi_followers = [50, 100, 200, 400, 800, 1200, 1800, 2500, 3000]
ravan_effigies = [100, 200, 500, 1000, 2000, 3500, 5000, 7000, 10000]

fig.add_trace(
    go.Scatter(x=years, y=gandhi_followers, mode='lines+markers',
               name='Gandhi Followers (M)', line=dict(color='#FF9933', width=3),
               marker=dict(size=10, symbol='circle')),
    row=2, col=1
)
fig.add_trace(
    go.Scatter(x=years, y=ravan_effigies, mode='lines+markers',
               name='Ravana Effigies Burnt', line=dict(color='#8B0000', width=3),
               marker=dict(size=10, symbol='x')),
    row=2, col=1
)

# 4. Winner count by category
gandhi_wins = sum(1 for g, r in zip(gandhi_scores, ravan_scores) if g > r)
ravan_wins = sum(1 for g, r in zip(gandhi_scores, ravan_scores) if r > g)
ties = sum(1 for g, r in zip(gandhi_scores, ravan_scores) if g == r)

fig.add_trace(
    go.Bar(x=['Gandhi Wins 🕊️', 'Ravana Wins 👿', 'Ties 🤝'],
           y=[gandhi_wins, ravan_wins, ties],
           marker=dict(color=['#FF9933', '#8B0000', '#808080']),
           text=[gandhi_wins, ravan_wins, ties],
           textposition='outside',
           showlegend=False),
    row=2, col=2
)

# Update layout
fig.update_xaxes(title_text="Score (Out of 100)", row=1, col=1)
fig.update_xaxes(title_text="Gandhi's Score →", row=1, col=2, range=[0, 105])
fig.update_yaxes(title_text="← Ravana's Score", row=1, col=2, range=[0, 105])
fig.update_xaxes(title_text="Year", row=2, col=1)
fig.update_yaxes(title_text="Count (Millions/Thousands)", row=2, col=1)
fig.update_xaxes(title_text="Winner", row=2, col=2)
fig.update_yaxes(title_text="Categories Won", row=2, col=2)

fig.update_layout(
    title={
        'text': '🎉 OCTOBER 2nd SPECIAL: Gandhi Jayanti 🕊️ vs Dussehra 🔥<br><sub>The Most Peaceful & Most Fiery Day of the Year!</sub>',
        'x': 0.5,
        'xanchor': 'center',
        'font': {'size': 20, 'color': '#2C3E50', 'family': 'Arial Black'}
    },
    height=900,
    showlegend=True,
    legend=dict(x=0.5, y=-0.05, xanchor='center', orientation='h'),
    plot_bgcolor='#FFF8DC',
    paper_bgcolor='#FFFACD',
    font=dict(size=11)
)

# Add funny annotations
fig.add_annotation(
    text="Fun Fact: Gandhi had 1 head but infinite wisdom 🧠<br>Ravana had 10 heads but still made bad choices 🤦",
    xref="paper", yref="paper",
    x=0.5, y=-0.12, showarrow=False,
    font=dict(size=12, color='#8B4513'),
    xanchor='center'
)

fig.show()

# Print funny stats
print("=" * 60)
print("🎊 OCTOBER 2nd DASHBOARD STATS 🎊")
print("=" * 60)
print(f"\n🕊️  Gandhi's Total Score: {sum(gandhi_scores)}")
print(f"👿 Ravana's Total Score: {sum(ravan_scores)}")
print(f"\n🏆 Gandhi wins in {gandhi_wins} categories!")
print(f"🔥 Ravana wins in {ravan_wins} categories!")
print(f"\n💡 Lesson: More heads ≠ Better decisions! 😄")
print("=" * 60)

